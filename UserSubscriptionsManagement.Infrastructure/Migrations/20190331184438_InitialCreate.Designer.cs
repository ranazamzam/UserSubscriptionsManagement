// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserSubscriptionsManagement.Infrastructure;

namespace UserSubscriptionsManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190331184438_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserSubscriptionsManagement.Domain.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CallMinutes");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<double>("PriceIncVatAmount");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("734a58f0-d03d-42bb-9759-bf3fcfb2f3aa"),
                            CallMinutes = 50,
                            Name = "50 min deal",
                            Price = 24.0,
                            PriceIncVatAmount = 30.0
                        },
                        new
                        {
                            Id = new Guid("d2064dcf-40ef-4f0f-85c0-d2484e04ce06"),
                            CallMinutes = 20,
                            Name = "20 min deal",
                            Price = 10.0,
                            PriceIncVatAmount = 25.0
                        });
                });

            modelBuilder.Entity("UserSubscriptionsManagement.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test1@gmail.com",
                            FirstName = "test1first",
                            LastName = "test1last"
                        },
                        new
                        {
                            Id = 2,
                            Email = "test2@gmail.com",
                            FirstName = "test2first",
                            LastName = "test2last"
                        });
                });

            modelBuilder.Entity("UserSubscriptionsManagement.Domain.Models.UserSubscription", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<Guid>("SubscriptionId");

                    b.HasKey("UserId", "SubscriptionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("UserSubscriptions");
                });

            modelBuilder.Entity("UserSubscriptionsManagement.Domain.Models.UserSubscription", b =>
                {
                    b.HasOne("UserSubscriptionsManagement.Domain.Models.Subscription", "Subscription")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UserSubscriptionsManagement.Domain.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
